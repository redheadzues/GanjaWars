//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/InputSystem/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player1"",
            ""id"": ""b47ee9b3-e44c-497a-af79-6591aa48a6e9"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""43f6d77a-1196-4bd5-b183-338d9637d67e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TakeOrThrow"",
                    ""type"": ""Button"",
                    ""id"": ""2649be58-b54d-4289-aa2d-161fd29cf19a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap,SlowTap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMenu"",
                    ""type"": ""Button"",
                    ""id"": ""8e847d8d-24aa-49c0-908a-a40927ac63e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""fa054d8a-4966-4bff-a88e-fc36ab4585f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""20273b44-d602-4cd5-b505-469887c87f15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMainMenu"",
                    ""type"": ""Button"",
                    ""id"": ""2556d584-7331-4dad-a6bf-a62f482677cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c0efa086-54bd-47b1-b56f-08060d77d9bb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3826e408-49ac-4472-8f43-19e8793ab427"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3eac99a8-ab22-44e6-8c26-9be4ac21e51c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3ed1110a-6759-45ce-9e50-9aea484c34f7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""35ab432b-ee70-4768-a9a8-1476a85ffd29"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9d57e28a-36a5-47f7-afb7-96ebc9cb530f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TakeOrThrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed498047-f9ab-4ac8-8ed8-d2d01c421cee"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61713731-f99b-4e57-a0df-117f3e023dbe"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f222213-25b0-415e-841c-4de8a8ab71a2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2456e1b4-38d2-49ac-8ba3-28703fcea8cf"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMainMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player2"",
            ""id"": ""7732d8fe-aef8-4459-8799-2453e2238af5"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""7f5eae45-d0a5-41bf-b900-7044351260e0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TakeOrThrow"",
                    ""type"": ""Button"",
                    ""id"": ""972a6983-eaa9-467e-8d4e-49b1499f6319"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap,SlowTap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMenu"",
                    ""type"": ""Button"",
                    ""id"": ""aea5a531-fe05-4c1f-b8a7-10ec4bb10082"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""cc1fba88-7677-4e8a-ac78-e9b241bf191b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""69100686-5f5b-40ca-8823-51e746b6ea8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c7900bf2-6aba-4719-9ae3-f31feac571a0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bb9ae41f-5079-405c-b239-278d867631c6"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3e3e7df3-2b60-47ee-b461-31a3ce170ea6"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""90b02336-55de-4666-aa05-664deef953a3"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0e13ea2b-b829-4b29-b820-86152dbc1c05"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""96a3a33a-32e2-4c9a-b9ac-5b1bc14fcddc"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TakeOrThrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8137ebc8-73d0-47b5-bc20-09c5428cc1e2"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e438fed-0bae-47bc-9091-810f93cd56cb"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""952658bf-e2e6-4d6e-92d5-c3490c5567dd"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""fd942987-4f51-41e3-9d66-af960389f68e"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4ab1331b-889a-4644-9a70-190c1cd54a03"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""bfb14de5-dcc2-47c6-ab54-97597c4c02a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b1e1eb5e-139c-4f28-8d96-d27ca7b18637"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""d559cc5b-2cf5-4179-9c92-616c3363f385"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a8b77e09-3986-4eeb-b325-2cacac4caf5d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b2765adb-347d-4054-b152-0e7e1d418173"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1bb1cc93-9d0d-4a05-85e6-bb5854a074b6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""76b4e47c-90bc-4eaa-9339-a6b8818ce2b7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""902a3262-19be-47bf-a131-347d7e59ea06"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dffef933-33a5-432d-bccf-a100884a6847"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI1"",
            ""id"": ""201fca62-b46d-4b2f-afe2-6260f44cb700"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1e9df468-75e3-400b-91c0-489683e5e750"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""fb1d7eb9-3e91-44d7-af8a-1f4badf0ab79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fa0f9133-e786-4c02-b78b-227b8a6f6840"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""aa2bebd4-4a70-4cd6-810e-ea7ea04f9beb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b545e5ab-0176-47e3-bf9c-4bb8c210d80a"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""622f865e-a4fe-4b1d-a942-030f8e04283e"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9af84bbe-0d95-4b66-b22f-df4e6e08d32f"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""62f96076-ed7a-4f66-928c-0d67a4e10c3b"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2c38c84c-4800-40cd-836b-6287533a0e4a"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e62b0205-d707-4f87-9cb3-42aef044a5a3"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player1
        m_Player1 = asset.FindActionMap("Player1", throwIfNotFound: true);
        m_Player1_Move = m_Player1.FindAction("Move", throwIfNotFound: true);
        m_Player1_TakeOrThrow = m_Player1.FindAction("TakeOrThrow", throwIfNotFound: true);
        m_Player1_OpenMenu = m_Player1.FindAction("OpenMenu", throwIfNotFound: true);
        m_Player1_NextWeapon = m_Player1.FindAction("NextWeapon", throwIfNotFound: true);
        m_Player1_UseWeapon = m_Player1.FindAction("UseWeapon", throwIfNotFound: true);
        m_Player1_OpenMainMenu = m_Player1.FindAction("OpenMainMenu", throwIfNotFound: true);
        // Player2
        m_Player2 = asset.FindActionMap("Player2", throwIfNotFound: true);
        m_Player2_Move = m_Player2.FindAction("Move", throwIfNotFound: true);
        m_Player2_TakeOrThrow = m_Player2.FindAction("TakeOrThrow", throwIfNotFound: true);
        m_Player2_OpenMenu = m_Player2.FindAction("OpenMenu", throwIfNotFound: true);
        m_Player2_NextWeapon = m_Player2.FindAction("NextWeapon", throwIfNotFound: true);
        m_Player2_UseWeapon = m_Player2.FindAction("UseWeapon", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        // UI1
        m_UI1 = asset.FindActionMap("UI1", throwIfNotFound: true);
        m_UI1_Navigate = m_UI1.FindAction("Navigate", throwIfNotFound: true);
        m_UI1_Submit = m_UI1.FindAction("Submit", throwIfNotFound: true);
        m_UI1_Click = m_UI1.FindAction("Click", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player1
    private readonly InputActionMap m_Player1;
    private IPlayer1Actions m_Player1ActionsCallbackInterface;
    private readonly InputAction m_Player1_Move;
    private readonly InputAction m_Player1_TakeOrThrow;
    private readonly InputAction m_Player1_OpenMenu;
    private readonly InputAction m_Player1_NextWeapon;
    private readonly InputAction m_Player1_UseWeapon;
    private readonly InputAction m_Player1_OpenMainMenu;
    public struct Player1Actions
    {
        private @PlayerInput m_Wrapper;
        public Player1Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player1_Move;
        public InputAction @TakeOrThrow => m_Wrapper.m_Player1_TakeOrThrow;
        public InputAction @OpenMenu => m_Wrapper.m_Player1_OpenMenu;
        public InputAction @NextWeapon => m_Wrapper.m_Player1_NextWeapon;
        public InputAction @UseWeapon => m_Wrapper.m_Player1_UseWeapon;
        public InputAction @OpenMainMenu => m_Wrapper.m_Player1_OpenMainMenu;
        public InputActionMap Get() { return m_Wrapper.m_Player1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player1Actions set) { return set.Get(); }
        public void SetCallbacks(IPlayer1Actions instance)
        {
            if (m_Wrapper.m_Player1ActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnMove;
                @TakeOrThrow.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnTakeOrThrow;
                @TakeOrThrow.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnTakeOrThrow;
                @TakeOrThrow.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnTakeOrThrow;
                @OpenMenu.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnOpenMenu;
                @NextWeapon.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnNextWeapon;
                @NextWeapon.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnNextWeapon;
                @NextWeapon.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnNextWeapon;
                @UseWeapon.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnUseWeapon;
                @UseWeapon.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnUseWeapon;
                @UseWeapon.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnUseWeapon;
                @OpenMainMenu.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnOpenMainMenu;
                @OpenMainMenu.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnOpenMainMenu;
                @OpenMainMenu.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnOpenMainMenu;
            }
            m_Wrapper.m_Player1ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @TakeOrThrow.started += instance.OnTakeOrThrow;
                @TakeOrThrow.performed += instance.OnTakeOrThrow;
                @TakeOrThrow.canceled += instance.OnTakeOrThrow;
                @OpenMenu.started += instance.OnOpenMenu;
                @OpenMenu.performed += instance.OnOpenMenu;
                @OpenMenu.canceled += instance.OnOpenMenu;
                @NextWeapon.started += instance.OnNextWeapon;
                @NextWeapon.performed += instance.OnNextWeapon;
                @NextWeapon.canceled += instance.OnNextWeapon;
                @UseWeapon.started += instance.OnUseWeapon;
                @UseWeapon.performed += instance.OnUseWeapon;
                @UseWeapon.canceled += instance.OnUseWeapon;
                @OpenMainMenu.started += instance.OnOpenMainMenu;
                @OpenMainMenu.performed += instance.OnOpenMainMenu;
                @OpenMainMenu.canceled += instance.OnOpenMainMenu;
            }
        }
    }
    public Player1Actions @Player1 => new Player1Actions(this);

    // Player2
    private readonly InputActionMap m_Player2;
    private IPlayer2Actions m_Player2ActionsCallbackInterface;
    private readonly InputAction m_Player2_Move;
    private readonly InputAction m_Player2_TakeOrThrow;
    private readonly InputAction m_Player2_OpenMenu;
    private readonly InputAction m_Player2_NextWeapon;
    private readonly InputAction m_Player2_UseWeapon;
    public struct Player2Actions
    {
        private @PlayerInput m_Wrapper;
        public Player2Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player2_Move;
        public InputAction @TakeOrThrow => m_Wrapper.m_Player2_TakeOrThrow;
        public InputAction @OpenMenu => m_Wrapper.m_Player2_OpenMenu;
        public InputAction @NextWeapon => m_Wrapper.m_Player2_NextWeapon;
        public InputAction @UseWeapon => m_Wrapper.m_Player2_UseWeapon;
        public InputActionMap Get() { return m_Wrapper.m_Player2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player2Actions set) { return set.Get(); }
        public void SetCallbacks(IPlayer2Actions instance)
        {
            if (m_Wrapper.m_Player2ActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnMove;
                @TakeOrThrow.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnTakeOrThrow;
                @TakeOrThrow.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnTakeOrThrow;
                @TakeOrThrow.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnTakeOrThrow;
                @OpenMenu.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnOpenMenu;
                @NextWeapon.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnNextWeapon;
                @NextWeapon.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnNextWeapon;
                @NextWeapon.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnNextWeapon;
                @UseWeapon.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnUseWeapon;
                @UseWeapon.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnUseWeapon;
                @UseWeapon.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnUseWeapon;
            }
            m_Wrapper.m_Player2ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @TakeOrThrow.started += instance.OnTakeOrThrow;
                @TakeOrThrow.performed += instance.OnTakeOrThrow;
                @TakeOrThrow.canceled += instance.OnTakeOrThrow;
                @OpenMenu.started += instance.OnOpenMenu;
                @OpenMenu.performed += instance.OnOpenMenu;
                @OpenMenu.canceled += instance.OnOpenMenu;
                @NextWeapon.started += instance.OnNextWeapon;
                @NextWeapon.performed += instance.OnNextWeapon;
                @NextWeapon.canceled += instance.OnNextWeapon;
                @UseWeapon.started += instance.OnUseWeapon;
                @UseWeapon.performed += instance.OnUseWeapon;
                @UseWeapon.canceled += instance.OnUseWeapon;
            }
        }
    }
    public Player2Actions @Player2 => new Player2Actions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Click;
    public struct UIActions
    {
        private @PlayerInput m_Wrapper;
        public UIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Click.started -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // UI1
    private readonly InputActionMap m_UI1;
    private IUI1Actions m_UI1ActionsCallbackInterface;
    private readonly InputAction m_UI1_Navigate;
    private readonly InputAction m_UI1_Submit;
    private readonly InputAction m_UI1_Click;
    public struct UI1Actions
    {
        private @PlayerInput m_Wrapper;
        public UI1Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI1_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI1_Submit;
        public InputAction @Click => m_Wrapper.m_UI1_Click;
        public InputActionMap Get() { return m_Wrapper.m_UI1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UI1Actions set) { return set.Get(); }
        public void SetCallbacks(IUI1Actions instance)
        {
            if (m_Wrapper.m_UI1ActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UI1ActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UI1ActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UI1ActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UI1ActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UI1ActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UI1ActionsCallbackInterface.OnSubmit;
                @Click.started -= m_Wrapper.m_UI1ActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UI1ActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UI1ActionsCallbackInterface.OnClick;
            }
            m_Wrapper.m_UI1ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
            }
        }
    }
    public UI1Actions @UI1 => new UI1Actions(this);
    public interface IPlayer1Actions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnTakeOrThrow(InputAction.CallbackContext context);
        void OnOpenMenu(InputAction.CallbackContext context);
        void OnNextWeapon(InputAction.CallbackContext context);
        void OnUseWeapon(InputAction.CallbackContext context);
        void OnOpenMainMenu(InputAction.CallbackContext context);
    }
    public interface IPlayer2Actions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnTakeOrThrow(InputAction.CallbackContext context);
        void OnOpenMenu(InputAction.CallbackContext context);
        void OnNextWeapon(InputAction.CallbackContext context);
        void OnUseWeapon(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
    }
    public interface IUI1Actions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
    }
}
